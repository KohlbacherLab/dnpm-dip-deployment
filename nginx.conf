worker_processes 1;

events {
  worker_connections 1024;
}

http {
  sendfile on;

  server {
      listen 80;

      client_max_body_size 0;
      chunked_transfer_encoding on;

      proxy_redirect                      off;
      proxy_set_header Host               $host;
      proxy_set_header X-Real-IP          $remote_addr;
      proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto  $scheme;

      location / {
          proxy_pass                          http://portal:3000;
      }

      # Mutual TLS:
      ssl_client_certificate   /etc/ssl/certs/dnpm-ca-cert.pem; # Path to trusted CA certificate (DNPM CA)
      ssl_verify_client        optional;
      ssl_verify_depth         1;

      location ~ /api(/.*)?/peer2peer {
        if ($ssl_client_verify != "SUCCESS") {
           return 403;
        }
        proxy_pass http://backend:9000;
      }

      location /api {
          proxy_pass                          http://backend:9000;
      }

      location /auth/ {
          proxy_pass                          http://authup:3000/;
      }
  }

  # Reverse Proxy for TLS handling
  server {
    listen 443 ssl;

    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers on;

    # BSI TR-02102-2 recommends the brainpool curves
    # secp256r1 = prime256v1, see https://www.ietf.org/rfc/rfc5480.txt
    ssl_ecdh_curve 'brainpoolP384r1:secp384r1:brainpoolP256r1:prime256v1:brainpoolP512r1';

    ssl_certificate      /etc/ssl/certs/dnpm-server-cert.pem; # File should contain the intermediary certificates from which server certificate descends
    ssl_certificate_key  /etc/ssl/certs/dnpm-server-key.pem;


    client_max_body_size      0;
    chunked_transfer_encoding on;

    proxy_redirect                      off;
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;


    # Mutual TLS:
    ssl_client_certificate   /etc/ssl/certs/dnpm-ca-cert.pem; # Path to trusted CA certificate (DNPM CA)
    ssl_verify_client        optional;
    ssl_verify_depth         1;


    # Enforce mutual TLS for calls to Peer-to-Peer-API endpoints
    location ~ /api(/.*)?/peer2peer {
      if ($ssl_client_verify != "SUCCESS") {
         return 403;
      }
      proxy_pass http://backend:9000;
    }

    location /api {
      proxy_pass http://backend:9000;
    }

    location /auth/ {
      proxy_pass http://authup:3000/;
    }

    location / {
      proxy_pass http://portal:3000;
    }

  }

  # Forward Proxy to handle Client certificate
  # for mutual TLS in outgoing requests to DNPM-Broker
  server {
    listen 9010;

    proxy_ssl_protocols TLSv1.3;

    # Configuration for downstream mutual TLS:
    proxy_ssl_certificate        /etc/ssl/certs/dnpm-client-cert.pem;
    proxy_ssl_certificate_key    /etc/ssl/certs/dnpm-client-key.pem;
    proxy_ssl_session_reuse      on;

    # Remote server certificate verification
    proxy_ssl_verify               on;
    proxy_ssl_trusted_certificate  /etc/ssl/certs/ca-cert-chain.pem; # File ca_cert_chain.pem must contain the concatenated certificate chain
    proxy_ssl_verify_depth         2;


    location / {
      proxy_set_header Host $host;    # Forward virtual hostname as set in the request by DNPM-Connector-Client

      set $upstream https://dnpm.medizin.uni-tuebingen.de;
      proxy_pass $upstream;   # URL to DNPM Broker
    }
  }
}
