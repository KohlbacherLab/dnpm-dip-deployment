version: '3.8'

volumes:
  authup:

services:
  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-start123}
    networks:
      dnpm:

  authup:
    image: authup/authup:latest
    pull_policy: always
    restart: unless-stopped
    volumes:
      - authup:/usr/src/writable
    ports:
      - ${AUTHUP_PUBLIC_PORT:-4001}:3000
    depends_on:
      - mysql
    command: server/core start
    environment:
      - PUBLIC_URL=${BASE_URL}/auth/
        #      - PUBLIC_URL=${AUTHUP_PUBLIC_URL:-${BASE_URL}/auth/}
      - ROBOT_ADMIN_ENABLED=true
      - ROBOT_ADMIN_SECRET=${AUTHUP_SECRET:-start123}
      - ROBOT_ADMIN_SECRET_RESET=true
      - DB_TYPE=mysql
      - DB_HOST=mysql
      - DB_USERNAME=root
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD:-start123}
      - DB_DATABASE=auth
    networks:
      dnpm:

  portal:
    image: ghcr.io/kohlbacherlab/dnpm-dip-portal:latest
    pull_policy: always
    container_name: portal
    restart: unless-stopped
    environment:
      - NUXT_PUBLIC_API_URL=${BASE_URL}/api/
        #      - NUXT_PUBLIC_API_URL=${PORTAL_PUBLIC_URL:-${BASE_URL}/api/}
    ports:
      - ${PORTAL_PUBLIC_PORT:-4000}:3000
    networks:
      dnpm:

  backend:
    image: ghcr.io/kohlbacherlab/dnpm-dip-backend:latest
    # Optionally set system UserID with corresponding access permissions to data persistence directory
    #user: "UserID"
    ports:
      - ${BACKEND_PUBLIC_PORT:-9000}:9000
    environment:
      - RD_RANDOM_DATA=${BACKEND_RD_RANDOM_DATA:--1}
      - MTB_RANDOM_DATA=${BACKEND_MTB_RANDOM_DATA:--1}
      - HATEOAS_HOST=${BASE_URL}
        #      - HATEOAS_HOST=${BACKEND_HATEOAS_HOST:-${BASE_URL}}
      - CONNECTOR_TYPE=${BACKEND_CONNECTOR_TYPE:-broker}
      - AUTHUP_URL=${BACKEND_AUTHUP_URL:-robot://system:${AUTHUP_SECRET:-start123}@http://authup:3000}
    volumes:
      - /PATH/TO/CONFIG_DIR:/dnpm_config
      - /PATH/TO/PERSISTENCE_DIR:/dnpm_data
    networks:
      dnpm:


networks:
  dnpm:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: dnpm
    ipam:
      driver: default
      config:
        - subnet: 172.50.1.0/24
